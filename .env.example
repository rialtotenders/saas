#среда файла local|production
APP_ENV=local

#выводить системную инфрмацию на странице при ошибке, если выставлено в false, на странцие с ошибкой будет выведено общее сообщение без расшифровки с записью в лог
APP_DEBUG=true

#полная основная гиперссылка проекта
APP_URL=http://localhost

#ключ проекта для шифровки/расшифровки cookies, генерируется командой php artisan key:generate
APP_KEY=

#для saas-проектов, указание основной папки подсайта в каталоге /integer, например agro
APP_THEME=

#название соединения с базой данных
DB_CONNECTION=mysql

#хост соединения с базой данных
DB_HOST=localhost

#порт соединения с базой данных
DB_PORT=

#название базы данных
DB_DATABASE=

#имя пользователя для соединения с базой данных
DB_USERNAME=

#пароль для соединения с базой данных
DB_PASSWORD=

#хост соединения с базой данных статистических данных
DB_HOST_2=

#название базы данных статистических данных
DB_DATABASE_2=

#имя пользователя соединения с базой данных статистических данных
DB_USERNAME_2=

#пароль соединения с базой данных статистических данных
DB_PASSWORD_2=

#сервер redis
REDIS_HOST=127.0.0.1

#пароль для соединения с сервером redis
REDIS_PASSWORD=null

#порт для соединения с сервером redis
REDIS_PORT=6379

#тип кеширования file|memcached|...
CACHE_DRIVER=file

#префикс ключей при кешировании, позволяет на одном сервере кешировать несколько разных сайтов
CACHE_PREFIX=rialtotenders

#сервер memcached
MEMCACHED_HOST=

#порт memcached
MEMCACHED_PORT=

#тип хранения сессий file|memcached|redis...
SESSION_DRIVER=file

#сервис обработки отложенных действий (не используется в проекте)
QUEUE_DRIVER=sync

#тип отправки почтовых уведомлений mail|sendmail|smtp...
MAIL_DRIVER=mail

#сервер отправки почты
MAIL_HOST=smtp.mailgun.org

#порт отправки почты
MAIL_PORT=587

#тип шифрования при отправке почты
MAIL_ENCRYPTION=tls

#логин на сервер для отправки почты
MAIL_USERNAME=null

#пароль на сервер для отправки почты
MAIL_PASSWORD=null

#ключ подключения к сервису отправки почты mandrill
MAIL_MANDRILL_SECRET=

#кешировать ли роуты системы
ROUTES_CACHE=false

#кешировать ли js/css файлы
ASSET_CACHE=false

#принцип генерации гиперссылок с https (detect|secure)
LINK_POLICY=detect

#включение обязательной провеки csrf при отправке данных форм
ENABLE_CSRF=false

#режим при котором поисковые запросы не будут отправляться в ЦБД, а в результатах обращения будут подставляться локальные json файлы из папки /storage/pretend (для работы верстальщиков без доступа к ЦБД)
API_PRETEND=0


#нетестовый режим

#индекс тендеров, например: http://127.0.0.1:8000/tenders
API_TENDER=

#индекс планов, например: http://127.0.0.1:8000/plans
API_PLAN=

#индекс заказчиков, например: http://127.0.0.1:8000/orgsuggest
API_ORGSUGGEST=

#гиперссылка для доступа к контрактам, например: https://public.openprocurement.org/api/0/contracts
API_CONTRACT=

#ключ доступа к добавлению планов тендеров, 32 символа, например: 08c135a4cc1d94765v245e1abf143sd1
API_KEY=

#гиперссылка для доступа к добавлению планов тендеров, например: http://public.openprocurement.org/api/0
API_URL=

#ключ доступа для добавления файлов, 32 символа, например: 08c135a4cc1d94765v245e1abf143sd1
API_UPLOAD_KEY=

#логин для добавления файлов, например: saas
API_UPLOAD_LOGIN=

#гиперссылка на добавление файлов, например: http://upload.openprocurement.org/api/2.3
API_UPLOAD_URL=

#дополнительный запрос к поиску тендеров, например: tid_like=R-UA-
API_QUERY_TENDER=

#дополнительный запрос к поиску планов, например: pid_like=R-UA-P-
API_QUERY_PLAN=

#префикс номера тендера (что бы определить при простом поисковом запросе, что поиск по номеру тендера), например: R-UA-
API_PREFIX_TENDER=

#префикс номера плана (что бы определить при простом поисковом запросе, что поиск по номеру плана), например: R-UA-P-
API_PREFIX_PLAN=

#тестовый режим (mode=test), переменные аналогичны нетестовому режиму с добавлением TEST_
API_TEST_TENDER=
API_TEST_PLAN=
API_TEST_ORGSUGGEST=
API_TEST_CONTRACT=
API_TEST_KEY=
API_TEST_URL=
API_TEST_UPLOAD_KEY=
API_TEST_UPLOAD_LOGIN=
API_TEST_UPLOAD_URL=
API_TEST_QUERY_TENDER=
API_TEST_QUERY_PLAN=
API_TEST_PREFIX_TENDER=
API_TEST_PREFIX_PLAN=

#нетестовый режим: тендеры государственные, переменные аналогичны нетестовому режиму с добавлением GOV_
API_GOV_TENDER=
API_GOV_PLAN=
API_GOV_ORGSUGGEST=
API_GOV_CONTRACT=
API_GOV_KEY=
API_GOV_URL=
API_GOV_UPLOAD_KEY=
API_GOV_UPLOAD_LOGIN=
API_GOV_UPLOAD_URL=
API_GOV_QUERY_TENDER=
API_GOV_QUERY_PLAN=
API_GOV_PREFIX_TENDER=
API_GOV_PREFIX_PLAN=

#тестовый режим (mode=test): тендеры государственные, переменные аналогичны нетестовому режиму с добавлением GOV_TEST_
API_GOV_TEST_TENDER=
API_GOV_TEST_PLAN=
API_GOV_TEST_ORGSUGGEST=
API_GOV_TEST_CONTRACT=
API_GOV_TEST_KEY=
API_GOV_TEST_URL=
API_GOV_TEST_UPLOAD_KEY=
API_GOV_TEST_UPLOAD_LOGIN=
API_GOV_TEST_UPLOAD_URL=
API_GOV_TEST_QUERY_TENDER=
API_GOV_TEST_QUERY_PLAN=
API_GOV_TEST_PREFIX_TENDER=
API_GOV_TEST_PREFIX_PLAN=

#дополнительный заголовок в <title> сайта, сделано для того что бы нагляднее отслеживать среду проекта
HTML_TITLE=

#разрешить залогиненому пользователю смотреть поиск и тендеры
USER_SEARCH_ACCESS=

#гиперссылка на api bitbucket для формирования отчета по задачам
BITBUCKET_API_URL=

#пароль на api bitbucket для формирования отчета по задачам
BITBUCKET_APP_PASSWORD=

#имя пользователя на api bitbucket для формирования отчета по задачам
BITBUCKET_USERNAME=

#владелец репозитория на bitbucket для формирования отчета по задачам
BITBUCKET_OWNER_USERNAME=

#название репозитория на bitbucket для формирования отчета по задачам
BITBUCKET_REPOSITORY=

#гиперссылка доступа к worksection для формирования отчета по задачам
WORKSECTION_API_URL=

#ключ доступа к worksection для формирования отчета по задачам
WORKSECTION_API_KEY=

#идентификатор проекта для доступа к worksection для формирования отчета по задачам
WORKSECTION_PROJECT_ID=

#домен из настроек disqus, например: https://rialtotenders-com-ua.disqus.com
DISQUS_DOMAIN=

#Webhook URL, например: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
SLACK_HOOKS_URL=
